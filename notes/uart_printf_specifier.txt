
//=====================================================================================================================
/*
   1   2    3     4   5    6     7   8    9     10  11   12
   %d  %ld  %lld  %u  %lu  %llu  %i  %li  %lli  %x  %lx  %llx
*/

u8:  18 18 77309411346 18 18 77309411346 18 18 77309411346 0 249fa 249fa00000000
s8:  18 18 77309411346 18 18 77309411346 18 18 77309411346 0 249fa 249fa00000000
u16: 4660 4660 20014547604020 4660 4660 20014547604020 4660 4660 20014547604020 0 249fa 249fa00000000
s16: 4660 4660 20014547604020 4660 4660 20014547604020 4660 4660 20014547604020 0 249fa 249fa00000000
u32: 305419896 305419896 1311768465173141112 305419896 305419896 1311768465173141112 305419896 305419896 1311768465173141112 0 249fa 249fa00000000
s32: 305419896 305419896 1311768465173141112 305419896 305419896 1311768465173141112 305419896 305419896 1311768465173141112 0 249fa 249fa00000000
u64: -1412567287 305419896 1311768467750121225 2882400009 305419896 1311768467750121225 -1412567287 305419896 1311768467750121225 abcdef09 12345678 12345678abcdef09
s64: -1412567287 305419896 1311768467750121225 2882400009 305419896 1311768467750121225 -1412567287 305419896 1311768467750121225 abcdef09 12345678 12345678abcdef09

// RESULTS, which %<...> to used for what type (with number >= 0):
u8:   1,2,4,5,7,8    // %d, %ld, %u, %lu, %i, %li
s8:   1,2,4,5,7,8    
u16:  1,2,4,5,7,8
s16:  1,2,4,5,7,8
u32:  1,2,4,5,7,8
s32:  1,2,4,5,7,8
u64:  3,6,9,12       // %lld, %llu, %lli, %llx
s64:  3,6,9,12
//=====================================================================================================================
/*
   binary representation (2's complement) of negative number in python:

   bin(-18 & (2**8-1))

   twosComp = lambda val, bitLen: bin(val & (2**bitLen-1))
   twosComp(-18,8)
   twosComp(-18,16)

   # to int:
   int(twosComp(-18,16), 2)

   ########################################################################################
                                                                        18 == 0b                                                           10010
   int(twosComp(-18,8),2)                       == 238                     == 0b                                                        11101110
   ---
                                                                      4660 == 0b                                                   1001000110100
   int(twosComp(-4660,16),2)                    == 60876                   == 0b                                                1110110111001100
   int(twosComp(-4660,32),2)                    == 4294962636              == 0b                                11111111111111111110110111001100
   ---
                                                                 305419896 == 0b                                   10010001101000101011001111000
   int(twosComp(-305419896,32),2)               == 3989547400              == 0b                                11101101110010111010100110001000
   int(twosComp(-305419896,64),2)               == 18446744073404131720    == 0b1111111111111111111111111111111111101101110010111010100110001000
   ---
                                                       1311768467750121225 == 0b   1001000110100010101100111100010101011110011011110111100001001
   int(twosComp(-1311768467750121225,32),2)     == 1412567287
   int(twosComp(-1311768467750121225,64),2)     == 17134975605959430391

*/
/*
   1   2    3     4   5    6     7   8    9     10  11   12
   %d  %ld  %lld  %u  %lu  %llu  %i  %li  %lli  %x  %lx  %llx
*/
u8:  238 238 1022202216686 238 238 1022202216686 238 238 1022202216686 abcdef09 12345678 12345678abcdef09
s8:  -18 -18 -73014444050 4294967278 4294967278 18446744000695107566 -18 -18 -73014444050 abcdef09 12345678 12345678abcdef09
u16: 60876 60876 261460429172172 60876 60876 261460429172172 60876 60876 261460429172172 abcdef09 12345678 12345678abcdef09
s16: -4660 -4660 -20010252636724 4294962636 4294962636 18446724063456914892 -4660 -4660 -20010252636724 abcdef09 12345678 12345678abcdef09
u32: -305419896 -305419896 -1311768460878173816 3989547400 3989547400 17134975612831377800 -305419896 -305419896 -1311768460878173816 abcdef09 12345678 12345678abcdef09
s32: -305419896 -305419896 -1311768460878173816 3989547400 3989547400 17134975612831377800 -305419896 -305419896 -1311768460878173816 abcdef09 12345678 12345678abcdef09
u64: 1412567287 -305419897 -1311768467750121225 1412567287 3989547399 17134975605959430391 1412567287 -305419897 -1311768467750121225 543210f7 edcba987 edcba987543210f7
s64: 1412567287 -305419897 -1311768467750121225 1412567287 3989547399 17134975605959430391 1412567287 -305419897 -1311768467750121225 543210f7 edcba987 edcba987543210f7

// RESULTS, which %<...> to used for what type (with number < 0):
u8:   1,2,4,5,7,8       // %d, %ld, %u, %lu, %i, %li  -- CAREFUL: all print 'unsigned interpretation of negative value'
s8:   1,2,7,8           // %d, %ld, %i, %li
u16:  1,2,4,5,7,8       //                            -- CAREFUL: all print 'unsigned interpretation of negative value'
s16:  1,2,7,8
u32:  1,2,4,5,7,8,11    // CAREFUL: 4,5 print 'unsigned interpretation of negative value': int(twosComp(-305419896,32),2) == 3989547400
s32:  1,2,4,5,7,8,11
u64:  3,6,9,12          // %lld, %llu, %lli, %llx     -- CAREFUL: 6,12 print 'unsigned interpretation of negative value'
s64:  3,6,9,12

// derived usage rules:
u8:   1,2,4,5,7,8       => %d
s8:   1,2,7,8           => %d
u16:  1,2,4,5,7,8       => %d
s16:  1,2,7,8           => %d
u32:  1,2,4,5,7,8       => %d
s32:  1,2,7,8           => %d
u64:  3,6,9             => %lld
s64:  3,6,9             => %lld

//=====================================================================================================================
Ifx_Console_print("u8:  %d %d %d %d %d %d %d %d %d %d %d %d" ENDL, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8, u8);
Ifx_Console_print("s8:  %d %d %d %d %d %d %d %d %d %d %d %d" ENDL, s8, s8, s8, s8, s8, s8, s8, s8, s8, s8, s8, s8);
Ifx_Console_print("u16: %d %d %d %d %d %d %d %d %d %d %d %d" ENDL, u16, u16, u16, u16, u16, u16, u16, u16, u16, u16, u16, u16);
Ifx_Console_print("s16: %d %d %d %d %d %d %d %d %d %d %d %d" ENDL, s16, s16, s16, s16, s16, s16, s16, s16, s16, s16, s16, s16);
Ifx_Console_print("u32: %d %d %d %d %d %d %d %d %d %d %d %d" ENDL, u32, u32, u32, u32, u32, u32, u32, u32, u32, u32, u32, u32);
Ifx_Console_print("s32: %d %d %d %d %d %d %d %d %d %d %d %d" ENDL, s32, s32, s32, s32, s32, s32, s32, s32, s32, s32, s32, s32);
Ifx_Console_print("u64: %lld %lld %lld %lld %lld %lld %lld %lld %lld %lld %lld %lld" ENDL, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64, u64);
Ifx_Console_print("s64: %lld %lld %lld %lld %lld %lld %lld %lld %lld %lld %lld %lld" ENDL, s64, s64, s64, s64, s64, s64, s64, s64, s64, s64, s64, s64);

u8:  238 238 238 238 238 238 238 238 238 238 238 238
s8:  -18 -18 -18 -18 -18 -18 -18 -18 -18 -18 -18 -18
u16: 60876 60876 60876 60876 60876 60876 60876 60876 60876 60876 60876 60876
s16: -4660 -4660 -4660 -4660 -4660 -4660 -4660 -4660 -4660 -4660 -4660 -4660
u32: -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896
s32: -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896 -305419896
u64: -13117684696 -305415 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225
s64: -1311768775012122225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225 -1311768467750121225

//=====================================================================================================================
